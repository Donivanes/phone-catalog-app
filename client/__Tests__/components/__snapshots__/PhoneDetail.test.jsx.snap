// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PhoneDetail matcher snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PhoneDetail
    location={
      Object {
        "state": Object {
          "phone": Object {
            "colors": Array [
              "black",
            ],
            "imageUrl": "",
            "name": "Xiaomi",
            "snippet": "so cool",
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef>
        <ForwardRef
          alt=""
          src=""
        />
        <ForwardRef>
          <Link
            to="/"
          >
            Go Back
          </Link>
          <h1>
            Xiaomi
          </h1>
          <p>
            so cool
          </p>
          <p>
            Colors:
          </p>
          <ForwardRef>
            <ForwardRef
              color="black"
            />
          </ForwardRef>
        </ForwardRef>
      </ForwardRef>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            alt=""
            src=""
          />,
          <ForwardRef>
            <Link
              to="/"
            >
              Go Back
            </Link>
            <h1>
              Xiaomi
            </h1>
            <p>
              so cool
            </p>
            <p>
              Colors:
            </p>
            <ForwardRef>
              <ForwardRef
                color="black"
              />
            </ForwardRef>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alt": "",
            "src": "",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-iwsKbI",
              "isStatic": true,
              "rules": Array [
                "
max-width: 35%;
",
              ],
            },
            "displayName": "styled.img",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-iwsKbI",
            "target": "img",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                to="/"
              >
                Go Back
              </Link>,
              <h1>
                Xiaomi
              </h1>,
              <p>
                so cool
              </p>,
              <p>
                Colors:
              </p>,
              <ForwardRef>
                <ForwardRef
                  color="black"
                />
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Go Back",
                "to": "/",
              },
              "ref": null,
              "rendered": "Go Back",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Xiaomi",
              },
              "ref": null,
              "rendered": "Xiaomi",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "so cool",
              },
              "ref": null,
              "rendered": "so cool",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Colors:",
              },
              "ref": null,
              "rendered": "Colors:",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    color="black"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "black",
                  "nodeType": "function",
                  "props": Object {
                    "color": "black",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bZQynM",
                      "isStatic": false,
                      "rules": Array [
                        "
  background-color: ",
                        [Function],
                        ";
  height: 24px;
  width: 24px;
  border-radius: 50%;
  display: block;
  margin-right: 10px;
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bZQynM",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": true,
                  "rules": Array [
                    "
  display: flex;
  justify-content: center;
  width: 50%;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dnqmqq",
              "isStatic": true,
              "rules": Array [
                "
margin: 0 auto;
max-width: 50%;
flex-direction: column;
margin: 2rem 0;
>h1 {
  line-height: 3rem;
}
>p {
  margin-bottom: 2rem;
}
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-dnqmqq",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htoDjs",
          "isStatic": true,
          "rules": Array [
            "
display: flex;
flex-direction: column;
align-items: center;
max-width: 90%;
@media (min-width: 720px) {
  flex-direction: row;
}
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htoDjs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
  display: flex;
  justify-content: center;
  margin-top: 3rem;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <ForwardRef
            alt=""
            src=""
          />
          <ForwardRef>
            <Link
              to="/"
            >
              Go Back
            </Link>
            <h1>
              Xiaomi
            </h1>
            <p>
              so cool
            </p>
            <p>
              Colors:
            </p>
            <ForwardRef>
              <ForwardRef
                color="black"
              />
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              alt=""
              src=""
            />,
            <ForwardRef>
              <Link
                to="/"
              >
                Go Back
              </Link>
              <h1>
                Xiaomi
              </h1>
              <p>
                so cool
              </p>
              <p>
                Colors:
              </p>
              <ForwardRef>
                <ForwardRef
                  color="black"
                />
              </ForwardRef>
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "alt": "",
              "src": "",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-iwsKbI",
                "isStatic": true,
                "rules": Array [
                  "
max-width: 35%;
",
                ],
              },
              "displayName": "styled.img",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-iwsKbI",
              "target": "img",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Link
                  to="/"
                >
                  Go Back
                </Link>,
                <h1>
                  Xiaomi
                </h1>,
                <p>
                  so cool
                </p>,
                <p>
                  Colors:
                </p>,
                <ForwardRef>
                  <ForwardRef
                    color="black"
                  />
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Go Back",
                  "to": "/",
                },
                "ref": null,
                "rendered": "Go Back",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Xiaomi",
                },
                "ref": null,
                "rendered": "Xiaomi",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "so cool",
                },
                "ref": null,
                "rendered": "so cool",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Colors:",
                },
                "ref": null,
                "rendered": "Colors:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      color="black"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "black",
                    "nodeType": "function",
                    "props": Object {
                      "color": "black",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "rules": Array [
                          "
  background-color: ",
                          [Function],
                          ";
  height: 24px;
  width: 24px;
  border-radius: 50%;
  display: block;
  margin-right: 10px;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gzVnrw",
                    "isStatic": true,
                    "rules": Array [
                      "
  display: flex;
  justify-content: center;
  width: 50%;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gzVnrw",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dnqmqq",
                "isStatic": true,
                "rules": Array [
                  "
margin: 0 auto;
max-width: 50%;
flex-direction: column;
margin: 2rem 0;
>h1 {
  line-height: 3rem;
}
>p {
  margin-bottom: 2rem;
}
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-dnqmqq",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htoDjs",
            "isStatic": true,
            "rules": Array [
              "
display: flex;
flex-direction: column;
align-items: center;
max-width: 90%;
@media (min-width: 720px) {
  flex-direction: row;
}
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htoDjs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  justify-content: center;
  margin-top: 3rem;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
